使用的是API方式，使用Mysql的数据库资源，所以需要包含头文件、连接Lib和获取相应的dll文件。

一 vc的设置

这里使用的是vs2010，所以附上vs2010的设置

（1）打开VC6.0 工具栏Tools菜单下的Options选项，在Directories的标签页中右边的“Show directories for:”下拉列表中选中“Includefiles”，然后在中间列表框中添加你本地安装MySQL的include目录路径。（我的是D:\Program Files\MySQL\MySQL Server 5.0\include）。

vs2010中的设置，在：项目-属性-配置属性-VC++目录-包含目录

（2）在上面说到的“Show directories for:”下拉列表中选中“Library files”，然后添加你本地安装MySQL的Lib目录路径。Lib目录下还有debug和opt两个目录，建议选debug。（我的是D:\Program Files\MySQL\MySQL Server 5.0\lib\debug）。

vs2010中的设置，在：项目-属性-配置属性-VC++目录-库目录

或者：项目-属性-配置属性-连接器-常规-附加库目录

（3）在“Project settings->Link:Object/library modules”里面添加“libmysql.lib”。

vs2010中的设置，在：项目-属性-配置属性-连接器-输入-附加依赖项

（4）在stdafx.h里面添加如下的内容：

 

#include "mysql.h"#include "winsock.h" // 如果编译出错,则把该行放到#include "mysql.h"之前#pragma comment(lib,"libmySQL.lib") // 如果在附加依赖项里已增加,则就不要添加了 
 

（5）建议将“libmySQL.lib、libmySQL.dll”拷到你所建的工程的目录下。

这个也需要！

 

二 数据库的相关操作

打开“开始->所有程序->MySQL->MySQL Server 5.0->MySQL Command Line Client.exe”，如果没有设置密码就直接按回车，会提示服务器启动成功。

mysql> SHOW DATABASES;//显示所有的数据库，注意一定要 敲“;”后再按回车mysql> CREATE DATABASE mydb;//创建数据库mydbmysql> USE mydb;//选择你所创建的数据库mydbmysql> SHOW TABLES; //显示数据库中的表mysql> CREATE TABLE mytable (username VARCHAR(100), visitelist VARCHAR(200),  
remark VARCHAR(200));//创建一个表mytable: 用户名；访问列表

 

；备注
mysql> DESCRIBE mytable;//显示表的结构

 

三 VC编程

 

MYSQL mysql; //数据库连接句柄mysql_init (&mysql);if(!mysql_real_connect(&mysql,"localhost","root",NULL,"mydb",3306,NULL,0)) {//mydb为你所创建的数据库，3306为端口号，可自行设定 AfxMessageBox("数据库连接失败"); return FALSE;} 
 

（1）实现添加 功能

 

CString strUsername,strList,strRemark,strSQL;strSQL.Format("insert into mytable(username,visitelist,remark) values(\'%s\',\'%s\',\'%s\')", strUsername,strList,strRemark);//注意一定要写在一行，而且必须要有\'\'if(mysql_real_query(&mysql,(char*)(LPCTSTR)strSQL,(UINT)strSQL.GetLength())!=0){ AfxMessageBox("增添失败"); } 

（2）实现修改功能

 

 

CString strUsername,strList,strRemark,strSQL,str_PreName;//str_PreName用于记录想要修改的行，详情请看源代码strSQL.Format("update mytable set username=\'%s\',visitelist=\'%s\', remark=\'%s\' where username=\'%s\'",strUsername,strList,strRemark,str_PreName);if(mysql_real_query(&mysql,(char*)(LPCTSTR)strSQL,(UINT)strSQL.GetLength())!=0){ AfxMessageBox("修改失败"); } 
 

（3）实现删除功能

 

CString strSQL;strSQL.Format("delete from mytable where username=\'%s\'",str_PreName);//必须要有\'\'if(mysql_real_query(&mysql,(char*)(LPCTSTR)strSQL,(UINT)strSQL.GetLength())!=0){ AfxMessageBox("删除失败"); } 
 

（4）读取表格内容到CListCtrl控件m_list

 

m_list.DeleteAllItems();char *ch_query;ch_query="select * from mytable";if(mysql_real_query(&mysql,ch_query,(UINT)strlen(ch_query))!=0){ AfxMessageBox("数据库中表格出错"); }CString str;MYSQL_RES *result;MYSQL_ROW row;if(!(result=mysql_use_result(&mysql))){ AfxMessageBox("读取数据集失败"); }int i=0;while(row=mysql_fetch_row(result)){str.Format("%s",row[0]);m_list.InsertItem(i,str);str.Format("%s",row[1]);m_list.SetItemText(i,1,str);str.Format("%s",row[2]);m_list.SetItemText(i,2,str);i++;}mysql_free_result(result); 
 
做一些添加： 
while (row=mysql_fetch_row(result)) 
{num=mysql_num_fields(result); 
for (int j=0;j<num;j++) 
...} 
mysql_fetch_row依次获取受影响的行，当结束时返回NULL，mysql_num_fields获取该行的列数。注意，这里的row是char** 类型，即row[i]是char*类型。 
 

（5）关闭数据库

 

mysql_close(&mysql);//最好写到OnDestroy()函数中 
