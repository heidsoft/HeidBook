.关于 MySQL socket 路径的问题  


自己装了一个MYSQL客户端，但却发现出现这样的错误：

Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)

1.先查看 /etc/init.d/mysqld status 看看m y s q l 是否已经启动. 
2.另外看看是不是权限问题. 

当然我遇到的问题不在上面之列，我的问题是找不到mysqld.sock文件，可以通过下面的方法来解决。

其实最简单的方法就是建一个软链接'/var/run/mysqld/mysqld.sock' ，链接到实际的mysql.sock文件所在位置，如：ln -s  /tmp/mysql.sock  /var/run/mysqld/mysqld.sock

 也可以在每次连接中指定mysql.sock文件，但只在本次连接中有效，不是好方法：
mysql -u 你的mysql用户名 -p -S /tmp/mysql.sock 

-S后面的就是实际的mysql.sock文件路径。

         但很快我就发现上面的方法也不好,因为Mysql关闭或系统重启时会把/tmp/mysql.sock 删除,导致下一次再用Mysql客户端连接时又找不到mysql.sock文件,因为文件已删掉,所以软链接文件/var/run/mysqld/mysqld.sock也就不存了.最后也没想出一个好的方法来,也没找出为什么Mysql客户端非要/var/run/mysqld/mysqld.sock,因为我在my.cnf配置的/tmp/mysql.sock.很无奈,只好把my.cnf里的/tmp/mysql.sock 都改成了/var/run/mysqld/mysqld.sock,保存后重启Mysql,这回终于是可以了吧.的确，mysql客户端(mysql Client)是可以连接了，但当我运行PHP连接Mysql时，问题又出现了熟悉的错误：Can't connect to local MySQL server through socket '/tmp/mysql.sock' (2) in /www/info.php on line 6，原来是php期望在/tmp/下面找到mysql.sock文件，从phpinfo()可以看到这项：MYSQL_SOCKET  /tmp/mysql.sock ，这个可以在php.ini中配置，找到这句：mysql.default_socket =，默认是空的，这时会使用编辑Mysql时设置的sock路径，如我是/tmp/mysql.sock ，而正好我在上面将my.cnf中的/tmp/mysql.sock 都改成了/var/run/mysqld/mysqld.sock，这将使Mysql Server启动里在/var/run/mysqld/mysqld.sock生成sock文件，而不会在/tmp/mysql.sock 生成。这里我需要设置成：mysql.default_socket =/var/run/mysqld/mysqld.sock，从启APACHE，再连接一下看看，OK，哈哈。

      归根结蒂，出现这个问题的原因在于系统中安装mysql client时设置sock文件的位置与编译PHP时或php.ini中设置的sock文件路径不一致，这样只能使它们中的其中一个有路径正确了。不过我也发现一个问题，就是用PHP连接Mysql时如果Mysql服务器地址使用localhost会出现上面的问题，但是如果使用IP：127.0.0.1，却可以使用，这个问题一直没有想明白，个人猜测使用127.0.0.1时当作从外网访问MYSQL,使用的是sock文件是Mysql服务器端的配置,而mysql服务器端的sokc自然是正确的,所以没有问题；而使用localhost时当作本机访问mysql,使用本机客户端的sock路径配置,而PHP的配置与服务器上不一致,所以无法使用。不过这只是本个猜测，未证实，望明白的朋友告知~

后来在网上看到这个下面这篇文章：

找不到mysql socket的问题，我最近碰到了好多次
重装系统以前，我的mysql，apache，php都是自己编译安装的，当时并没有碰到这些问题，
重装系统以后，我的mysql是通过yum安装的，apache1.37和php5.2是自己编译安装的，出现了这个问题

首先是mysqld启动不了，
我通过vim /etc/my.cnf，修改了[mysqld]选项下面的socket的值


socket=/tmp/mysql.sock 
ok，mysqld可以启动了

接下来，是mysql启动不了，同样，vim /etc/my.cnf,添加了如下脚本：


[mysql]
socket=/tmp/mysql.sock
然后，mysqladmin启动不了，还是一样，在[mysqladmin]下面socket值设置为同样的路径
ok,可以启动了

最后，用php连接的时候，又出现这个问题了
Can't connect to local MySQL server through socket '/var/run/mysqld/mysql.sock' (2)
我首先想到的是，在/etc/php.ini修改mysql.default_socket的值，在这个文件中，关于mysql.default_socket的值的说明是这样的，
; Default socket name for local MySQL connects.  If empty, uses the built-in MySQL defaults.
这个值一开始是空的，也就是说，如果我们不主动去修改的话，php将会使用内建在mysql中的默认值
于是，我修改了这个值，设置为：


mysql.default_socket=/tmp/mysql.sock然后我重新启动apache，结果无效（本人注：其实我在这步后已经可以了，不知道原文作者是什么原因不行）；reboot系统，结果无效
我火大了，php就非得去连接/tmp/mysql.sock，可是我的系统里面就是没有这个路径下的这个文件，那我就给你链接一个，于是我做了下面的操作，
ln -s  /tmp/mysql.sock  /var/run/mysqld/mysqld.sock

这应该是一个不错的方法了

重新打开我的php页面，ok，这下能连接到数据库了。



就这样，我把这个问题解决了，可是我还是有点迷糊，为什么一定要去找 /var/run/mysqld/mysqld.sock这个文件，是不是一开始我就给它ln一个链接就可以解决？这个mysql.sock到底是用来做什么的？于是我就产生了看看这个文件内容的想法,

cat /tmp/mysql.sock 
提示我，cat: /tmp/mysql.sock: 没有那个设备或地址

less /tmp/mysql.sock

/tmp/mysql.sock is not a regular file (use -f to see it)
我强行查看！
less -f /tmp/mysql.sock

/tmp/mysql.sock: 没有那个设备或地址
～～
vim /tmp/mysql.sock
提示权限不足，我是root用户耶，还提示权限不足，奇怪了
～～～～
ls -l /tmp/mysql.sock
看到的属性是：
srwxrwxrwx 1 mysql mysql 0 11-21 14:39 /tmp/mysql.sock
这个属性引起了我的注意，档案类型标志是s,还真没去了解过这样的类型，到鸟哥的私房菜去找了一下，原来，这个是资料接口档，用我们大陆说的习惯应该是套接字文件(sockets)，这种文件一般用在网络上的资料套接，mysqld守护进程生成了这个文件，其他与mysql相关的程序想使用mysql，估计就是通过这个文件了。
这种特殊文件即使是最高权限的root用户，也是不能查看不能编辑的，有点像档案标志是p的管道文件
