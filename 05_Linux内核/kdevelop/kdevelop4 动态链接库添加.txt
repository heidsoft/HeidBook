kdevelop4的很多地方都不同于kdevelop3.5. 在工程->从模板新建->c++  下面，绝大多数是基于cmake的模板

基于cmake的，一般出现的是提示没有定义什么什么函数。因为是没有找到对应的库。

所以在CMakeLists.txt中添加 target_link_libraries（工程名， 库的路径（可以添加多个））函数。

至于怎么找到对应的库： 通过头文件，找到头文件最顶层的目录，对应的库文件名是libXXX.so

find / -name libXXX.so

找到了就在CMakeLists.txt中添加 target_link_libraries（工程名， /路径/libXXX.so）函数

kdevelop4 使用已经不使用autotool 工具集合，转而使用cmake构建系统。

cmake构建系统，需要手工编辑CMakeLists.txt文件，下面是一个简单的例子，可以参考，可以添加需要使用的头文件的路径，和链接的动态库的路径，添加源码文件等基本需要。

CMakeLists.txt （example）

PROJECT(test)
SET(SRC_LIST test.cpp)
INCLUDE_DIRECTORIES(/home/libs/include)
LINK_DIRECTORIES(/home/libs/bin/i686/debug)
ADD_EXECUTABLE(test ${SRC_LIST})
官方网站：www.cmake.org/
详细信息可以查看文档cmake实践文档，百度文库中有pdf版本文件。

